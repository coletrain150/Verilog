// $Id: $
// File name:   flex_stp.sv
// Created:     2/4/2014
// Author:      Cole Reinhold
// Lab Section: 337-01
// Version:     1.0  Initial Design Entry
// Description: serial to parallel shift register


module flex_stp
#(
parameter NUM_BITS = 4,
parameter SHIFT_MSB = 1
)
(
input wire clk,
input wire n_rst,
input wire shift_enable,
input wire serial_in,
output wire [NUM_BITS:0] parallel_out
);

assign n_rst = 1;
assign serial_in = 1;   
genvar i;
generate
for(i = 0; i <=(NUM_BITS-1); i = i + 1)
begin
   always_ff @ (posedge clk, negedge n_rst)
     begin
	     if(1'b0 == n_rst)
	     begin
	       parallel_out[i]=1;
	     end
	     else if(shift_enable == 1)
	     begin
	       if(SHIFT_MSB == 0)
	       begin
		       if(i!=0)
		       begin
		         parallel_out[i]=parallel_out[i-1];
		       end
		       parallel_out[0]=serial_in;
	       end
	       else
	       begin
		       if(i!=NUM_BITS -1)
		       begin
		         parallel_out[i]=parallel_out[i+1];
		       end
		       parallel_out[NUM_BITS-1]=serial_in;
	       end
	    end
    end
end // for (i = 0; i <=(NUM_BITS-1); i = i + 1)
endgenerate
endmodule